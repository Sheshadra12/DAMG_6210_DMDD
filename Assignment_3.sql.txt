set serveroutput on;
DECLARE
  dig NUMBER;
BEGIN
  SELECT count(*) INTO dig FROM user_tables 
    WHERE TABLE_NAME = 'TICTACTOE';
  IF dig = 0 THEN
    EXECUTE IMMEDIATE 'CREATE TABLE TICTACTOE(
      y NUMBER,
      A CHAR,
      B CHAR,
      C CHAR
    )';
 END IF;
END;






CREATE OR REPLACE FUNCTION digtocolm(Di IN NUMBER)
RETURN CHAR
IS
BEGIN
  IF Di=1 THEN
    RETURN 'A';
  ELSIF Di=2 THEN
    RETURN 'B';
  ELSIF Di=3 THEN
    RETURN 'C';
  ELSE 
    RETURN '_';
  END IF;
END;

CREATE OR REPLACE PROCEDURE game_board IS
BEGIN
  dbms_output.enable(10000);
  dbms_output.put_line(' ');
  FOR ll in (SELECT * FROM TICTACTOE ORDER BY Y) LOOP
    dbms_output.put_line('     ' || ll.A || ' ' || ll.B || ' ' || ll.C);
  END LOOP; 
  dbms_output.put_line(' ');
END;


CREATE OR REPLACE PROCEDURE re_enable IS
Y NUMBER;
BEGIN
  DELETE FROM TICTACTOE;
  FOR Y in 1..3 LOOP
    INSERT INTO TICTACTOE VALUES (Y,'_','_','_');
  END LOOP; 
  dbms_output.enable(10000);
  game_board();
  dbms_output.put_line('The game is loaded : EXECUTE play(''X'', x, y);');
END;


CREATE OR REPLACE PROCEDURE play(icon IN VARCHAR2, Colm IN NUMBER, cord IN NUMBER) IS
val TICTACTOE.a%type;
calls CHAR;
icon1 CHAR;
BEGIN
  SELECT digtocolm(Colm) INTO calls FROM DUAL;
  EXECUTE IMMEDIATE ('SELECT ' || calls || ' FROM TICTACTOE WHERE y=' || cord) INTO val;
  IF val='_' THEN
    EXECUTE IMMEDIATE ('UPDATE TICTACTOE SET ' || calls || '=''' || icon || ''' WHERE y=' || cord);
    IF icon='X' THEN
      icon1:='O';
    ELSE
      icon1:='X';
    END IF;
    game_board();
    dbms_output.put_line('Ready - EXECUTE play(''' || icon1 || ''', x, y);');
  ELSE
    dbms_output.enable(10000);
    dbms_output.put_line('Played in past');
  END IF;
END;

CREATE OR REPLACE PROCEDURE victor(icon IN VARCHAR2) IS
BEGIN
  dbms_output.enable(10000);
  game_board();
  dbms_output.put_line('You' || icon || 'made it'); 
  dbms_output.put_line('---------------------------------------');
  dbms_output.put_line('restart game');
  re_enable();
END;

CREATE OR REPLACE FUNCTION winner_req(num_c IN VARCHAR2, icon IN VARCHAR2)
RETURN VARCHAR2
IS
BEGIN
  RETURN ('SELECT COUNT(*) FROM TICTACTOE WHERE ' || num_c || ' = '''|| icon ||''' AND ' || num_c || ' != ''_''');
END;

CREATE OR REPLACE FUNCTION win_req(num_c IN VARCHAR2, yvalue IN NUMBER)
RETURN VARCHAR2
IS
BEGIN
  RETURN ('SELECT '|| num_c ||' FROM TICTACTOE WHERE y=' || yvalue);
END;

CREATE OR REPLACE FUNCTION win_call(num_c IN VARCHAR2)
RETURN CHAR
IS
  I_win NUMBER;
  r VARCHAR2(56);
BEGIN
  SELECT winner_req(num_c, 'X') into r FROM DUAL;
  EXECUTE IMMEDIATE r INTO I_win;
  IF I_win=3 THEN
    RETURN 'X';
  ELSIF I_win=0 THEN
    SELECT winner_req(num_c, 'O') into r FROM DUAL;
    EXECUTE IMMEDIATE r INTO I_win;
    IF I_win=3 THEN
      RETURN 'O';
    END IF;
  END IF;
  RETURN '_';
END;

CREATE OR REPLACE FUNCTION Vic_cross(tmp IN CHAR, numcall IN NUMBER, numcord IN NUMBER)
RETURN CHAR
IS
  tm CHAR;
  tmvar CHAR;
  r VARCHAR2(56);
BEGIN
  SELECT win_req(digtocolm(numcall), numcord) INTO r FROM DUAL;
  IF tmp IS NULL THEN
    EXECUTE IMMEDIATE (r) INTO tmvar;
  ELSIF NOT tmp = '_' THEN
    EXECUTE IMMEDIATE (r) INTO tm;
    IF NOT tmp = tm THEN
      tmvar := '_';
    END IF;
  ELSE
    tmvar := '_';
  END IF;
  RETURN tmvar;
END;

CREATE OR REPLACE TRIGGER isvictory
AFTER UPDATE ON TICTACTOE
DECLARE
  CURSOR c_cord IS 
    SELECT * FROM TICTACTOE ORDER BY Y; 
  pointer TICTACTOE%rowtype;
  tm CHAR;
  tm1 CHAR;
  tm2 CHAR;
  r VARCHAR2(40);
BEGIN
  FOR pointer IN c_cord LOOP
    -- line test
    IF pointer.A = pointer.B AND pointer.B = pointer.C AND NOT pointer.A='_' THEN
      victor(pointer.A);
      EXIT;
    END IF;
    --column test
    SELECT win_call(digtocolm(pointer.Y)) INTO tm FROM DUAL;
    IF NOT tm = '_' THEN
      victor(tm);
      EXIT;
    END IF;

    SELECT Vic_cross(tm1, pointer.Y, pointer.Y) INTO tm1 FROM dual;
    SELECT Vic_cross(tm2, 4-pointer.Y, pointer.Y) INTO tm2 FROM dual;
  END LOOP;
  IF NOT tm1 = '_' THEN
    victor(tm1);
  END IF;
  IF NOT tm2 = '_' THEN
    victor(tm2);
  END IF;
END;
/
--

EXECUTE re_enable;
EXECUTE play('X', 1, 3);
EXECUTE play('O', 2, 1);
EXECUTE play('X', 2, 2);
EXECUTE play('O', 2, 3);
EXECUTE play('X', 3, 1);
